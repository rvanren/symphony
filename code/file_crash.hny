from alloc import malloc

def File(n_files) returns fs:
    fs = malloc([ [], ] * n_files)

def read(fs, ino, offset) returns result:
    atomically result = choose { ("ok", (!fs)[ino][offset] if 0 <= offset < len (!fs)[ino] else None), "crash" }

def write(fs, ino, offset, data) returns result:
    atomically:
        if choose { False, True }:
            let n = len (!fs)[ino]:
                if 0 <= offset <= n:
                    (!fs)[ino][offset] = data
                else:
                    (!fs)[ino] += ([ None, ] * (offset - n)) + [data,]
            result = choose { "ok", "crash" }
        else:
            result = "crash"
            

def delete(fs, ino) returns result::
    atomically:
        if choose { False, True }:
            (!fs)[ino] = []
            result = choose { "ok", "crash" }
        else:
            result = "crash"
