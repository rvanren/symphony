from synch import *

def Barrier(required) returns barrier:
    barrier = {
        .mutex: Lock(), .cond: Condition(),
        .required: required, .n: 0, .color: 0
    }

def bwait(b):
    acquire(?b->mutex)
    b->n += 1
    if b->n == b->required:
        b->color ^= 1
        b->n = 0
        notify_all(?b->cond)
    else:
        let color = b->color:
            while b->color == color:
                wait(?b->cond, ?b->mutex)
    release(?b->mutex)
