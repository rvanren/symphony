from synch import *

const N = 5

mutex = Lock()
forks = [False,] * N
conds = [Condition(),] * N

def diner(which):
    let left, right = (which, (which + 1) % N):
        while choose({ False, True }):
            acquire(?mutex)
            while forks[left] or forks[right]:
                wait(?conds[which], ?mutex)
            forks[left] = forks[right] = True
            release(?mutex)
            # dine
            acquire(?mutex)
            forks[left] = forks[right] = False
            notify(?conds[(which - 1) % N])
            notify(?conds[(which + 1) % N])
            release(?mutex)
            # think

for i in {0..N-1}:
    spawn diner(i)
