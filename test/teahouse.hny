from synch import *

const NPAIRS = 3

def Teahouse():
    result = {
        .mutex: Lock(),
        .tables: { .black: 0, .green: 0 },
        .seating: { .black: Condition(), .green: Condition() },
        .drinking: { .black: Condition(), .green: Condition() }
    }

def seatYourself(th, pref):
    acquire(?th->mutex)
    while th->tables[pref] >= 2:
        wait(?th->seating[pref], ?th->mutex)
    th->tables[pref] += 1
    notify(?th->drinking[pref])
    release(?th->mutex)

def drinkTea(th, pref):
    acquire(?th->mutex)
    while th->tables[pref] < 2:
        wait(?th->drinking[pref], ?th->mutex)
    release(?th->mutex)

def leave(th, pref):
    acquire(?th->mutex)
    th->tables[pref] = (th->tables[pref] + 1) % 4
    if th->tables[pref] == 0:
        notifyAll(?th->seating[pref])
    release(?th->mutex)

def student(th, pref):
    seatYourself(th, pref)
    drinkTea(th, pref)
    leave(th, pref)

teahouse = Teahouse()

for i in {1 .. NPAIRS}:
    let pref = choose({ .green, .black }):
        spawn student(?teahouse, pref)
        spawn student(?teahouse, pref)
